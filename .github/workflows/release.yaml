name: Release

on: 
 push:
   tags:
     - v*
jobs:
  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
    - run: |
        git fetch --prune --unshallow
    - id: set-matrix
      run: |
          content=`cat ./releases.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=matrix::{\"include\": $content }"
  build:
    runs-on: ubuntu-latest
    needs:
    - get-matrix
    permissions:
      id-token: write  # OIDC support
      contents: write
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: Login to Quay Registry
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Build  ðŸ”§
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          ./earthly.sh +all --K3S_VERSION=${{ matrix.k3s_version }} --FLAVOR=${{ matrix.flavor }}
          sudo mv build release
      - name: Push to quay
        if: startsWith(github.ref, 'refs/tags/')
        env:
          COSIGN_EXPERIMENTAL: 1
        run: | 
          IMAGE=$(cat release/IMAGE)
          docker push $IMAGE
          cosign sign $IMAGE
          sudo rm -rf release/IMAGE release/VERSION
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release/*
      - run: |
          sudo mv release/*.iso ./
          sudo mv release/*.sha256 ./
      - uses: actions/upload-artifact@v3
        with:
          name: kairos-${{ matrix.flavor }}${{ matrix.k3s_version }}.iso.zip
          path: |
            *.iso
            *.sha256
          if-no-files-found: error

